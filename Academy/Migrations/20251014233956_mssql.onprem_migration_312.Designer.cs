// <auto-generated />
using System;
using Academy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Academy.Migrations
{
    [DbContext(typeof(AcademyContext))]
    [Migration("20251014233956_mssql.onprem_migration_312")]
    partial class mssqlonprem_migration_312
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Academy.Models.Direction", b =>
                {
                    b.Property<byte>("direction_id")
                        .HasColumnType("tinyint");

                    b.Property<string>("direction_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("direction_id");

                    b.ToTable("Directions", (string)null);
                });

            modelBuilder.Entity("Academy.Models.Group", b =>
                {
                    b.Property<int>("group_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("group_id"));

                    b.Property<byte?>("direction")
                        .HasColumnType("tinyint");

                    b.Property<string>("group_name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeSpan?>("start_time")
                        .HasColumnType("time");

                    b.Property<byte?>("weekdays")
                        .HasColumnType("tinyint");

                    b.HasKey("group_id");

                    b.HasIndex("direction");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("Academy.Models.Student", b =>
                {
                    b.Property<int>("stud_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stud_id"));

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("group_id")
                        .HasColumnType("int")
                        .HasColumnName("group");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("middle_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<byte[]>("photo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("stud_id");

                    b.HasIndex("group_id");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Academy.Models.Teacher", b =>
                {
                    b.Property<short>("teacher_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("teacher_id"));

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("middle_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<byte[]>("photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal>("rate")
                        .HasColumnType("smallmoney");

                    b.Property<DateTime>("work_since")
                        .HasColumnType("datetime2");

                    b.HasKey("teacher_id");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("Academy.Models.Group", b =>
                {
                    b.HasOne("Academy.Models.Direction", "Direction")
                        .WithMany("Groups")
                        .HasForeignKey("direction")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("Academy.Models.Student", b =>
                {
                    b.HasOne("Academy.Models.Group", "Groups")
                        .WithMany("Students")
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Academy.Models.Direction", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Academy.Models.Group", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
